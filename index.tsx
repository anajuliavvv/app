import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useMemo, useState } from "react";
import { Footer } from "~/components/Footer";
import { sales, type ISale } from "~/constants/sales";
import { awaitFor } from "~/helpers/awaitFor";

export default function Home() {
  const [timeDisplay, setHours] = useState("00:00:00");

  const handleHours = async () => {
    const date = new Date();
    setHours(
      date.getHours().toString().padStart(2, "0") +
        ":" +
        date.getMinutes().toString().padStart(2, "0") +
        ":" +
        date.getSeconds().toString().padStart(2, "0"),
    );
    await awaitFor(333);
    void handleHours();
  };

  const lastSales = useMemo(() => {
    const date = new Date();
    const weekDay = date.getDay();
    const entries = Object.entries(sales);

    let validSales: (ISale & {
      time: number;
      saleTimeString: string;
      saleDay: string;
    })[] = [];
    for (const [dateString, sale] of entries) {
      const [saleWeekDayString, saleTimeString] = dateString.split("T");
      if (!saleTimeString) continue;
      const saleWeekDay = Number(saleWeekDayString);
      const saleDayText = (): string => {
        if (saleWeekDay === 0) return "Dom";
        if (saleWeekDay === 1) return "Seg";
        if (saleWeekDay === 2) return "Ter";
        if (saleWeekDay === 3) return "Qua";
        if (saleWeekDay === 4) return "Qui";
        if (saleWeekDay === 5) return "Sex";
        if (saleWeekDay === 6) return "Sab";
        return "?";
      };
      if (saleWeekDay > weekDay) continue;
      const timeStrings = saleTimeString.split(":");
      const hours = Number(timeStrings[0]);
      const minutes = Number(timeStrings[1]);
      const seconds = Number(timeStrings[2]);
      if (saleWeekDay === weekDay && hours >= date.getHours()) continue;
      const time =
        seconds + 60 * minutes + 3600 * hours + saleWeekDay * 24 * 3600;
      validSales.push({
        saleTimeString,
        time,
        ...sale,
        saleDay: saleDayText(),
      });
    }

    validSales = validSales.sort((a, b) => b.time - a.time).slice(0, 3);

    return validSales.map((sale) => (
      <div
        className="last-sale mb-1 grid w-full grid-cols-5 items-center justify-between gap-3 border-b border-gray-200"
        key={`sale-${sale.time}`}
      >
        <span className="text-xs font-semibold text-white">
          {sale.saleDay} {sale.saleTimeString.slice(0, 5)}
        </span>
        <span className="col-span-2 text-sm font-semibold">{sale.name}</span>
        <div className="col-span-2 ml-auto text-end text-white">
          {" "}
          R${sale.value}
        </div>
      </div>
    ));
  }, [timeDisplay]);

  useEffect(() => {
    void handleHours();
  }, []);
  return (
    <>
      <Head>
        <title>Fornecedor7 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-4 bg-gray-100">
        <Image
          src={"/images/logo.png"}
          alt="logo"
          className=""
          height={300}
          width={300}
        />
        <div className="mx-auto mb-4 max-w-[80vw] border-b border-blue px-8 pb-2 text-center text-xs font-semibold text-gray-400">
          Entregando qualidade desde 2022.
        </div>
        <div className="mx-auto flex w-full max-w-[80vw] flex-col items-center justify-center p-4">
          <div className="flex flex-row items-center justify-start text-xs">
            <span className=" font-semibold text-gray-800">
              üïë {timeDisplay}{" "}
            </span>
            <span className="mx-auto  font-semibold text-gray-800">
              {" "}
              - √öltimas compras:
            </span>
          </div>
          <div className="flex w-full max-w-[80vw] flex-col rounded-md bg-gradient-to-b from-blue to-[mediumslateblue]  p-4 shadow-2xl">
            {lastSales}
          </div>
        </div>
        <div className="animate_text mb-5 mt-3 text-2xl font-extrabold">
          Servi√ßos Dispon√≠veis:
        </div>
        <div className="mb-6 grid grid-cols-2 gap-8 px-6">
          <Link
            href={"/menu/fisico"}
            className="flex flex-col items-center justify-center rounded-lg bg-white p-4 shadow-2xl"
          >
            <Image
              src={"/images/card-anim.gif"}
              alt="card"
              height={100}
              width={100}
            />
            <div className="mt-2 text-center text-sm font-semibold text-gray-800 ">
              Cart√µes F√≠sicos
            </div>
          </Link>
          <Link
            href={"/menu/notas"}
            className="flex h-full flex-col items-center justify-end rounded-lg bg-white p-4 shadow-2xl"
          >
            <Image
              src={"/images/cash.gif"}
              alt="card"
              height={100}
              width={100}
            />
            <div className="mt-5 text-sm font-semibold text-gray-800 ">
              Notas Falsas
            </div>
          </Link>
          <Link
            href={"/menu/consultavel"}
            className="flex h-full flex-col items-center justify-end rounded-lg bg-white p-4 shadow-2xl"
          >
            <Image
              src={"/images/ct-anim.gif"}
              alt="card"
              height={100}
              width={100}
            />
            <div className="mt-5 text-sm font-semibold text-gray-800 ">
              Consult√°veis
            </div>
          </Link>
          <Link
            href="/menu/saldo"
            className="flex flex-col items-center justify-between rounded-lg bg-white p-4 shadow-2xl"
          >
            <Image
              src={"/images/vs-anim.gif"}
              alt="card"
              height={100}
              width={100}
              className="h-[84px] w-[100px]"
            />
            <div className="mt-2 text-center text-sm font-semibold text-gray-800">
              Virada de Saldo
            </div>
          </Link>
          <Link
            className="col-span-2 flex hidden flex-col items-center justify-center rounded-lg bg-white p-4 shadow-2xl"
            href={"/menu/lara"}
          >
            <Image
              src={"/images/bank.png"}
              alt="card"
              height={100}
              width={100}
            />
            <div className="mt-2 text-sm font-semibold text-gray-800 ">
              Lara (CBI)
            </div>
          </Link>
        </div>
        <div className="mb-24 mt-6 flex w-full flex-row items-center justify-center gap-8  p-6">
          <Image src={"/images/ssl.png"} alt="badge" height={100} width={100} />
          <Image
            src={"/images/compra-safe.png"}
            alt="badge"
            height={100}
            width={100}
          />
        </div>

        <Footer />
      </main>
    </>
  );
}
